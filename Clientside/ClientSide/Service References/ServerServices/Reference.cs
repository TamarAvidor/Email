//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientSide.ServerServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfEmail")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ClientSide.ServerServices.MailBox mailBoxk__BackingFieldField;
        
        private string passwordk__BackingFieldField;
        
        private string usernamek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<mailBox>k__BackingField", IsRequired=true)]
        public ClientSide.ServerServices.MailBox mailBoxk__BackingField {
            get {
                return this.mailBoxk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.mailBoxk__BackingFieldField, value) != true)) {
                    this.mailBoxk__BackingFieldField = value;
                    this.RaisePropertyChanged("mailBoxk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<password>k__BackingField", IsRequired=true)]
        public string passwordk__BackingField {
            get {
                return this.passwordk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordk__BackingFieldField, value) != true)) {
                    this.passwordk__BackingFieldField = value;
                    this.RaisePropertyChanged("passwordk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<username>k__BackingField", IsRequired=true)]
        public string usernamek__BackingField {
            get {
                return this.usernamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.usernamek__BackingFieldField, value) != true)) {
                    this.usernamek__BackingFieldField = value;
                    this.RaisePropertyChanged("usernamek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailBox", Namespace="http://schemas.datacontract.org/2004/07/WcfEmail")]
    [System.SerializableAttribute()]
    public partial class MailBox : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ClientSide.ServerServices.Mail[] _mailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClientSide.ServerServices.Mail[] _mails {
            get {
                return this._mailsField;
            }
            set {
                if ((object.ReferenceEquals(this._mailsField, value) != true)) {
                    this._mailsField = value;
                    this.RaisePropertyChanged("_mails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mail", Namespace="http://schemas.datacontract.org/2004/07/WcfEmail")]
    [System.SerializableAttribute()]
    public partial class Mail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string dateAndSTimeSendingk__BackingFieldField;
        
        private ClientSide.ServerServices.User[] destinationUsersListk__BackingFieldField;
        
        private string messageBodyk__BackingFieldField;
        
        private string messageSubjectk__BackingFieldField;
        
        private string senderNamek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<dateAndSTimeSending>k__BackingField", IsRequired=true)]
        public string dateAndSTimeSendingk__BackingField {
            get {
                return this.dateAndSTimeSendingk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.dateAndSTimeSendingk__BackingFieldField, value) != true)) {
                    this.dateAndSTimeSendingk__BackingFieldField = value;
                    this.RaisePropertyChanged("dateAndSTimeSendingk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<destinationUsersList>k__BackingField", IsRequired=true)]
        public ClientSide.ServerServices.User[] destinationUsersListk__BackingField {
            get {
                return this.destinationUsersListk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.destinationUsersListk__BackingFieldField, value) != true)) {
                    this.destinationUsersListk__BackingFieldField = value;
                    this.RaisePropertyChanged("destinationUsersListk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<messageBody>k__BackingField", IsRequired=true)]
        public string messageBodyk__BackingField {
            get {
                return this.messageBodyk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.messageBodyk__BackingFieldField, value) != true)) {
                    this.messageBodyk__BackingFieldField = value;
                    this.RaisePropertyChanged("messageBodyk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<messageSubject>k__BackingField", IsRequired=true)]
        public string messageSubjectk__BackingField {
            get {
                return this.messageSubjectk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.messageSubjectk__BackingFieldField, value) != true)) {
                    this.messageSubjectk__BackingFieldField = value;
                    this.RaisePropertyChanged("messageSubjectk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<senderName>k__BackingField", IsRequired=true)]
        public string senderNamek__BackingField {
            get {
                return this.senderNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.senderNamek__BackingFieldField, value) != true)) {
                    this.senderNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("senderNamek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerServices.IEmailService")]
    public interface IEmailService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/AddNewUser", ReplyAction="http://tempuri.org/IEmailService/AddNewUserResponse")]
        void AddNewUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/DeleteExsitingUser", ReplyAction="http://tempuri.org/IEmailService/DeleteExsitingUserResponse")]
        void DeleteExsitingUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/UpdateExistingUserPassword", ReplyAction="http://tempuri.org/IEmailService/UpdateExistingUserPasswordResponse")]
        void UpdateExistingUserPassword(string username, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/ShowExsitingUsers", ReplyAction="http://tempuri.org/IEmailService/ShowExsitingUsersResponse")]
        ClientSide.ServerServices.User[] ShowExsitingUsers(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/IsUserVaild", ReplyAction="http://tempuri.org/IEmailService/IsUserVaildResponse")]
        bool IsUserVaild(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/IsValidPassword", ReplyAction="http://tempuri.org/IEmailService/IsValidPasswordResponse")]
        bool IsValidPassword(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/IsValidUserName", ReplyAction="http://tempuri.org/IEmailService/IsValidUserNameResponse")]
        bool IsValidUserName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/IsLegitPassword", ReplyAction="http://tempuri.org/IEmailService/IsLegitPasswordResponse")]
        bool IsLegitPassword(string passwordToCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/IsLegitUsername", ReplyAction="http://tempuri.org/IEmailService/IsLegitUsernameResponse")]
        bool IsLegitUsername(string usernameToCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailService/Connect", ReplyAction="http://tempuri.org/IEmailService/ConnectResponse")]
        void Connect();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailServiceChannel : ClientSide.ServerServices.IEmailService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailServiceClient : System.ServiceModel.ClientBase<ClientSide.ServerServices.IEmailService>, ClientSide.ServerServices.IEmailService {
        
        public EmailServiceClient() {
        }
        
        public EmailServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddNewUser(string username, string password) {
            base.Channel.AddNewUser(username, password);
        }
        
        public void DeleteExsitingUser(string username, string password) {
            base.Channel.DeleteExsitingUser(username, password);
        }
        
        public void UpdateExistingUserPassword(string username, string currentPassword, string newPassword) {
            base.Channel.UpdateExistingUserPassword(username, currentPassword, newPassword);
        }
        
        public ClientSide.ServerServices.User[] ShowExsitingUsers(string username, string password) {
            return base.Channel.ShowExsitingUsers(username, password);
        }
        
        public bool IsUserVaild(string username, string password) {
            return base.Channel.IsUserVaild(username, password);
        }
        
        public bool IsValidPassword(string password) {
            return base.Channel.IsValidPassword(password);
        }
        
        public bool IsValidUserName(string username) {
            return base.Channel.IsValidUserName(username);
        }
        
        public bool IsLegitPassword(string passwordToCheck) {
            return base.Channel.IsLegitPassword(passwordToCheck);
        }
        
        public bool IsLegitUsername(string usernameToCheck) {
            return base.Channel.IsLegitUsername(usernameToCheck);
        }
        
        public void Connect() {
            base.Channel.Connect();
        }
    }
}
